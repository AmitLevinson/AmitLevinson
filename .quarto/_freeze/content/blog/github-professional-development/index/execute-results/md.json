{
  "hash": "f9dbd9be0989489bdf0042a326d49566",
  "result": {
    "markdown": "---\ntitle: Propel your professional career with GitHub\nauthor: Amit Grinson\ndate: '2023-05-16'\nlayout: single\nslug: professional-development-with-github\ncategories: [GitHub, Career]\ntags: [GitHub, Career]\nsubtitle: ''\nsummary: 'GitHub is a great platform to upgrade your career as a junior and more experienced analyst. Read on to see how you can utilize it in various ways.'\nfeatured: yes\nprojects: []\nformat: hugo-md\n---\n\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\n## Some intro?\n\nGitHub is one of those tools that indirectly boosted my career. In different from tools like SQL, R & Python, on Git & GitHub I wasn't really evaluated. However, picking it up early on in my career and using it in various ways has benefited my growth immensly. \n\nFor that purpose, I'd like to share a few ways a junior/mid/senior analyst can use GitHub for professional development. Even if you don't use it - or similar Git based platforms - at work, it can be a great booster for you personal career and projects. Allright, let's begin.\n\n\n### Professional development\n\nI'll go through several ways I've used GitHub for my personal interests and journey. The list is somewhat ordered by a hierarchical complexity: more basic uses are shown first while more challenging (yet rewarding) uses are stated further down the page. \n\n### Reading & Awareness\n\nThis is a trivial manner for those already in the programming industry, but not so for juniors just starting. users own repositories with files in them. Most files are easily read once clickable: `.py` `.R` `.sql` and more. This enables us to explore the source code of others' projects and files they share with us.\n\n### Sharing content\n\nSharing your code online has multiple benefits, mainly the contribution to open source and helping others. My approach is, any code you write might be relevant for someone else. Just as much as you were a beginner once, someone else is now at the level your were once. \n\nThere's two major benefits of sharing your content from where I see it:\n\n1. Readable and clean code â€” When I push something online for the world to see I try to make it as clean as possible. After all, this code represents how I write my code. The fact that multiple people might see it *forces* me to have it as clean as possible: Remove unnecessary comments and pieces of code, maybe re-write variable and function names in a meaningful way and more. I suppose that these practices should occurr regardless of sharing code, but knowing it's public online for the world to see amplifies the urge to have looking good.\n\n2. \n\n### File management\n\nOn some occasions, a project you're working on becomes big. Whether it's a lot of code, multiple outputs or inputs or just the conceptual flow of things that addresses many topics. This might result in multiple files and folders. Being able to properly separate a project into its relevant files and a good structure isn't trivial nor always done. While you might have all your files in one folder locally, I'm not sure you'd want it messy like that remotely (on GitHub).\n\nAs much as how your GitHub portfolio describes what you bring to the table, likewise when it comes to file management. Being able to properly separate files into relevant folders and organizing the project and a coherent way is a good skill to have and bring to the table. \n\n### Using a README\n\nREADMEs are fantastic. Even for the sole purpose of just sharing what does the repository we're looking at contain. Morever, READMEs are great for beginner data analysts looking for a place to host their analysis online.  \n\nAs an easy win, uploading a jupyter-notebook to a repository without a readme will make the notebook as the primary source of document to read from. In other words, you can leverage this feature to have your analysis be the first thing a visitor sees and can read through, as it's rendered right there in the repository's landing page.\n\nThis feature makes the whole using of a README a great starting point for someone wanting to share information about their project, but not sure where. However if you feel like you want to make more out of your personal project - mainly aesthetics, continue reading.\n\n### Interactive documents and notebooks with GitHub Pages\n\nWe talked previously about a good README. if the purpose of the README is mainly to showcase your work, then maybe GitHub Pages is a more suitable solution.\n\n[GitHub Pages](https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages) are basically a static hosting service taking the HTML, CSS and JS files in a repository and publishes them as a website (with optional build process). Essentially, you can easily upload project outputs to your repository and share them easily with others. This is especially appealing considering you're already pushing your files to GitHub, making the update automatically instead of, for example, inserting various parts into a PDF.\n\nIt works great with notebooks: You can just render them and push them to your repo. Similarly, we can leverage it for interactive outputs like a nice rendered leaflet map.\n\nI often use it, sharing various outputs such as quick notebooks, and even wrote a post on exactly how to do it. The process has changed a bit since writing it, so you can also see a short example below.\n\nXX How does it work? Explained XX\n\nLet's take one of my repositories as an example. I analyzed some gas price data in the past and wrote up the process as a jupyter notebook. The the files were located in this repo, 'python_playground', mainly the jupyter notebook (extension `.ipynb`) and the rendered notebook using Quarto (a `.html` file).\n\nWe can easily make this accessible online by going to the repo's main page (click the repo's name on top) -> Settings -> Pages tab on the left and see that the relevant branch is set; probably main. Any files you add here can be then accessed in the following link:  \n\nhttps://amitlevinson.github.io/python_playground/\n\nThis address should also be shown to you in the GitHub Pages tab as we see in the image below\n\n![](pages.png)\n\n\n\n\n### building a Website/Portfolio\n\n### Using commits and branches\n\n### GitHub Actions\n\n### Netlify integrations\n\nSecrets, Gists\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}